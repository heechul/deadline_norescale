diff --git a/kernel/sched/deadline.c b/kernel/sched/deadline.c
index b9e99bc3b..43056e0b9 100644
--- a/kernel/sched/deadline.c
+++ b/kernel/sched/deadline.c
@@ -1327,22 +1327,17 @@ static void update_curr_dl(struct rq *rq)
 		return;
 
 	/*
-	 * For tasks that participate in GRUB, we implement GRUB-PA: the
-	 * spare reclaimed bandwidth is used to clock down frequency.
+	 * For tasks that participate in GRUB, we reclaim spare
+	 * bandwidth according to the GRUB accounting rule.
 	 *
-	 * For the others, we still need to scale reservation parameters
-	 * according to current frequency and CPU maximum capacity.
+	 * For the others, we return the delta_exec as is.
 	 */
 	if (unlikely(dl_se->flags & SCHED_FLAG_RECLAIM)) {
 		scaled_delta_exec = grub_reclaim(delta_exec,
 						 rq,
 						 &curr->dl);
 	} else {
-		unsigned long scale_freq = arch_scale_freq_capacity(cpu);
-		unsigned long scale_cpu = arch_scale_cpu_capacity(cpu);
-
-		scaled_delta_exec = cap_scale(delta_exec, scale_freq);
-		scaled_delta_exec = cap_scale(scaled_delta_exec, scale_cpu);
+		scaled_delta_exec = delta_exec;
 	}
 
 	dl_se->runtime -= scaled_delta_exec;
